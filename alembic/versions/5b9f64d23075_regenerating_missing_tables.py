"""Regenerating missing tables

Revision ID: 5b9f64d23075
Revises: a165e4694eaf
Create Date: 2025-03-30 10:02:54.927008

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5b9f64d23075'
down_revision: Union[str, None] = 'a165e4694eaf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('permissionuuid', sa.UUID(), nullable=False),
    sa.Column('permissionname', sa.String(length=50), nullable=False),
    sa.Column('permissiondesc', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('permissionuuid')
    )
    op.create_index(op.f('ix_permissions_permissionname'), 'permissions', ['permissionname'], unique=True)
    op.create_table('roles',
    sa.Column('roluuid', sa.UUID(), nullable=False),
    sa.Column('rolname', sa.String(length=50), nullable=False),
    sa.Column('roldesc', sa.String(length=80), nullable=True),
    sa.Column('rolstatus', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('roluuid')
    )
    op.create_index(op.f('ix_roles_rolname'), 'roles', ['rolname'], unique=True)
    op.create_table('role_permission',
    sa.Column('roluuid', sa.UUID(), nullable=False),
    sa.Column('permissionuuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['permissionuuid'], ['permissions.permissionuuid'], ),
    sa.ForeignKeyConstraint(['roluuid'], ['roles.roluuid'], ),
    sa.PrimaryKeyConstraint('roluuid', 'permissionuuid')
    )
    op.create_table('user_roles',
    sa.Column('useruuid', sa.UUID(), nullable=False),
    sa.Column('roluuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['roluuid'], ['roles.roluuid'], ),
    sa.ForeignKeyConstraint(['useruuid'], ['users.useruuid'], ),
    sa.PrimaryKeyConstraint('useruuid', 'roluuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_roles_rolname'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_permissionname'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
